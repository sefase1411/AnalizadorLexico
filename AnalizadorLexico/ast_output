// Abstract Syntax Tree
digraph AST {
	0 [label=Program]
	1 [label="FunctionDef(sumar)"]
	2 [label=ParamList]
	3 [label="Param(a:int)"]
	2 -> 3
	4 [label="Param(b:int)"]
	2 -> 4
	1 -> 2
	5 [label=Block]
	6 [label="VarDecl(resultado:int)"]
	7 [label="Op(+)"]
	8 [label=a]
	7 -> 8
	9 [label=b]
	7 -> 9
	6 -> 7
	5 -> 6
	10 [label=If]
	11 [label="Op(>)"]
	12 [label=resultado]
	11 -> 12
	13 [label=10]
	11 -> 13
	10 -> 11
	14 [label=Block]
	15 [label=Assign]
	16 [label=resultado]
	15 -> 16
	17 [label="Op(-)"]
	18 [label=resultado]
	17 -> 18
	19 [label=1]
	17 -> 19
	15 -> 17
	14 -> 15
	10 -> 14
	20 [label=Block]
	21 [label=Assign]
	22 [label=resultado]
	21 -> 22
	23 [label="Op(+)"]
	24 [label=resultado]
	23 -> 24
	25 [label=1]
	23 -> 25
	21 -> 23
	20 -> 21
	10 -> 20
	5 -> 10
	26 [label=While]
	27 [label="Op(<)"]
	28 [label=resultado]
	27 -> 28
	29 [label=5]
	27 -> 29
	26 -> 27
	30 [label=Block]
	31 [label=Assign]
	32 [label=resultado]
	31 -> 32
	33 [label="Op(+)"]
	34 [label=resultado]
	33 -> 34
	35 [label=2]
	33 -> 35
	31 -> 33
	30 -> 31
	26 -> 30
	5 -> 26
	36 [label=Return]
	37 [label=resultado]
	36 -> 37
	5 -> 36
	1 -> 5
	0 -> 1
}
